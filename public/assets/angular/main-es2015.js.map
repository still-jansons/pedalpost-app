{"version":3,"sources":["./resources/frontend/angular/src/app/components/overview/overview.component.html","./resources/frontend/angular/src/app/components/overview/overview.component.ts","./resources/frontend/angular/src/app/components/cities/delete-city/dialog-delete-city.component.ts","./resources/frontend/angular/src/app/components/cities/delete-city/dialog-delete-city.component.html","./resources/frontend/angular/src/app/app.component.ts","./resources/frontend/angular/src/app/app.component.html","./resources/frontend/angular/src/app/components/clients/clients.component.ts","./resources/frontend/angular/src/app/components/clients/clients.component.html","./resources/frontend/angular/src/app/components/clients/client-form/client-form-dialog.component.ts","./resources/frontend/angular/src/app/components/clients/client-form/client-form-dialog.component.html","./resources/frontend/angular/src/app/pipes/filter.pipe.ts","./resources/frontend/angular/src/app/components/clients/delete-client/dialog-delete-client.component.ts","./resources/frontend/angular/src/app/components/clients/delete-client/dialog-delete-client.component.html","./resources/frontend/angular/src/app/components/snackbar/snackbar-message.component.ts","./resources/frontend/angular/src/app/components/snackbar/snackbar-message.component.html","./resources/frontend/angular/src/app/app.module.ts","./resources/frontend/angular/src/app/components/cities/city-form/dialog-city-form.component.ts","./resources/frontend/angular/src/app/components/cities/city-form/dialog-city-form.component.html","./resources/frontend/angular/src/environments/environment.ts","./resources/frontend/angular/src/app/components/cities/cities.component.ts","./resources/frontend/angular/src/app/components/cities/cities.component.html","./resources/frontend/angular/src/app/modules/material.module.ts","./resources/frontend/angular/src/app/services/http.service.ts","./resources/frontend/angular/src/app/modules/font-awesome-icons.module.ts","./resources/frontend/angular/src/app/services/snackbar.service.ts","./resources/frontend/angular/src/main.ts","./resources/frontend/angular/src/app/app-routing.module.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["<div>\n    <div class='d-flex align-items-center pl-4 pr-4 border-bottom position-relative view-header-wrapper' style='height: 70px;'>\n        <div>\n            <h4 class='mb-0 font-weight-bold'>Overview</h4>\n        </div>\n    </div>\n    <div *ngIf='!gettingCities; else isLoading'>\n        <div *ngIf='cities.length > 0; else isEmpty;'>\n            <input placeholder=\"Search city...\" autocomplete=\"off\" class='animation border-bottom search-cities-wrapper' [(ngModel)]=\"citySearchInput\">\n            <div class='list-cities'>\n                <div *ngFor='let city of cities | filterByKey : citySearchInput : \"name\"' class='city-container shadow-sm'>\n                    <div class='city-container-header border-bottom'>\n                        <div class='d-flex align-items-center' style='flex: 1;'>\n                            <h5 class='mb-0 font-weight-bold'>{{city.name}}</h5>\n                        </div>\n                    </div>\n                    <div class='city-container-body'>\n                        <div *ngIf='!gettingDates; else ordersIsLoading'>\n                            <div>\n                                <div class='d-flex align-items-center table-header-row' >\n                                    <div class='mr-2 pr-2 border-right ellipsis' style='flex: 2'>\n                                        <h6 class='mb-0 column-header-label ellipsis'>Date</h6>\n                                    </div>\n                                    <div class='mr-2 pr-2 border-right ellipsis' style='flex: 2'>\n                                        <h6 class='mb-0 column-header-label ellipsis'>Day of the week</h6>\n                                    </div>\n                                    <div class='mr-2 pr-2 border-right ellipsis' style='flex: 1'>\n                                        <h6 class='mb-0 column-header-label ellipsis'>Used capacity %</h6>\n                                    </div>\n                                    <div class='ellipsis' style='flex: 1'>\n                                        <h6 class='mb-0 column-header-label ellipsis'>Orders</h6>\n                                    </div>\n                                </div>\n                                <div>\n                                    <div *ngFor='let date of dates' class='d-flex align-items-center date-item border-bottom'>\n                                        <div class='mr-2 pr-2 border-right ellipsis' style='flex: 2'>\n                                            <h6 class='mb-0'>{{date.date}}</h6>\n                                        </div>\n                                        <div class='mr-2 pr-2 border-right ellipsis' style='flex: 2'>\n                                            <h6 class='mb-0 column-header-label ellipsis'>{{date.day_name}}</h6>\n                                        </div>\n                                        <div class='mr-2 pr-2 border-right ellipsis' style='flex: 1'>\n                                            <h6 *ngIf='date.orders_summary[city.id]; else itemColumnIsLoading' class='mb-0'>{{date.orders_summary[city.id]?.used_capacity}} %</h6>\n                                        </div>\n                                        <div class='ellipsis' style='flex: 1'>\n                                            <h6 *ngIf='date.orders_summary[city.id]; else itemColumnIsLoading' class='mb-0'>{{date.orders_summary[city.id]?.orders}}<sapn style='color: grey;'> / {{date.orders_summary[city.id]?.total_capacity}}</sapn></h6>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #isLoading>\n        <div class='spinner d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <mat-progress-spinner mode=\"indeterminate\" diameter='30' strokeWidth='4'></mat-progress-spinner>\n        </div>\n    </ng-template>\n    <ng-template #isEmpty>\n        <div class='w-100 d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <h5 class='font-weight-bold mb-0' style='color: grey;'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Cities list is empty</h5>\n        </div>\n    </ng-template>\n    <ng-template #ordersIsLoading>\n        <div class='spinner d-flex align-items-center justify-content-center'>\n            <mat-progress-spinner mode=\"indeterminate\" diameter='24' strokeWidth='4'></mat-progress-spinner>\n        </div>\n    </ng-template>\n    <ng-template #ordersIsEmpty>\n        <div class='w-100 d-flex align-items-center justify-content-center'>\n            <h6 class='font-weight-bold mb-0' style='color: grey;'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Orders list is empty</h6>\n        </div>\n    </ng-template>\n    <ng-template #itemColumnIsLoading>\n        <div class='spinner'>\n            <mat-progress-spinner mode=\"indeterminate\" diameter='14' strokeWidth='2'></mat-progress-spinner>\n        </div>\n    </ng-template>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n    selector: 'app-overview',\n    templateUrl: './overview.component.html',\n    styleUrls: ['../cities/cities.component.scss', './overview.component.scss']\n})\nexport class OverviewComponent implements OnInit, OnDestroy {\n    cities = [];\n    dates = [];\n    gettingCities = true;\n    gettingDates = true;\n    gettingOrders = true;\n\n    getCitiesSubscription: Subscription;\n    getDatesSubscription: Subscription;\n    getOrdersSubscription: Subscription;\n\n    constructor(\n        private https: HttpService\n    ) { }\n\n    ngOnInit(): void {\n        this.getCities();\n    }\n\n    ngOnDestroy(): void {\n        this.getCitiesSubscription.unsubscribe();\n        if (!this.gettingOrders) {\n            this.getOrdersSubscription.unsubscribe();\n        }\n    }\n\n    getCities(): void {\n        this.gettingCities = true;\n        this.getCitiesSubscription = this.https.get('web/getCities', {}).subscribe((cities: []) => {\n            if (cities) {\n                this.cities = cities;\n                this.gettingCities = false;\n                this.getDates();\n            }\n        });\n    }\n\n    getDates(): void {\n        this.gettingDates = true;\n        this.getDatesSubscription = this.https.get('web/getDates', {\n            days_limit: 8\n        }).subscribe((dates: any) => {\n            if (dates) {\n                this.dates = dates;\n                this.gettingDates = false;\n                this.getOrders(this.dates);\n            }\n        });\n    }\n\n    getOrders(dates) {\n        this.gettingOrders = true;\n\n        const dates_id_array = dates.map(date => {\n            return date.date_id;\n        });\n\n        this.getOrdersSubscription = this.https.get('web/getOrdersByDate', {\n            dates: JSON.stringify(dates_id_array)\n        }).subscribe((orders: any) => {\n            if (orders) {\n                this.setDateCurrentAvailability(orders);\n                this.gettingOrders = false;\n            }\n        });\n    }\n\n    setDateCurrentAvailability(orders) {\n        for (let date of this.dates) {\n            for (let city of this.cities) {\n                date.orders_summary[city.id] = this.getCityOrderInfo(city, date, orders);\n            }\n        }\n    }\n\n    getCityOrderInfo(city, date, orders) {\n        let total_capacity = 0;\n        let used_capacity = 0;\n        let orders_count = 0;\n\n        if (city.schedule_trough_week[date.day_of_week].length === 1) {\n            total_capacity = city.schedule_trough_week[date.day_of_week][0].capacity;\n        } else if ((city.schedule_trough_week[date.day_of_week].length > 1)) {\n            total_capacity = city.schedule_trough_week[date.day_of_week].reduce((a, b) => a + (b.capacity || 0), 0);\n        }\n\n        if (orders[date.date_id]) {\n            if (orders[date.date_id][city.id]) {\n                orders_count = orders[date.date_id][city.id].length;\n                if (orders_count > total_capacity) {\n                    used_capacity = 100;\n                } else {\n                    used_capacity = Number(((total_capacity === 0) ? 0 : (orders[date.date_id][city.id].length / total_capacity) * 100).toFixed(0));\n                }\n            }\n        }\n\n        return {\n            orders: orders_count,\n            total_capacity: total_capacity,\n            used_capacity: used_capacity\n        }\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../../../services/http.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n    selector: 'app-dialog-delete-city',\n    templateUrl: './dialog-delete-city.component.html',\n    styleUrls: ['./dialog-delete-city.component.scss']\n})\nexport class DeleteCityDialogComponent {\n    deleting = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public cityData: any,\n        private dialogRef: MatDialogRef<DeleteCityDialogComponent>,\n        private https: HttpService,\n        private snackbarService: SnackbarService\n    ) {}\n\n    closeDialog(cityData): void {\n        this.dialogRef.close(cityData);\n    }\n\n    deleteCity(): void {\n        this.deleting = true;\n        this.snackbarService.openSnackBar(null, null, 'Deleting...');\n        this.https.post('web/deleteCity', {\n            city_id: this.cityData.id\n        }).toPromise().then(() => {\n            this.deleting = false;\n            this.snackbarService.openSnackBar(true, 2500, 'Deleted.');\n            this.closeDialog(true);\n        }).catch(err => {\n            this.deleting = false;\n            this.snackbarService.openSnackBar(false, 2500, 'Something went wrong. Please try again.');\n            console.log(err);\n        });\n    }\n}\n","<div class='dialog-container'>\n    <div class='dialog-header-wrapper d-flex align-items-center border-bottom'>\n        <div style='flex: 1;'>\n            <h5 class='font-weight-bold mb-0'>Delete city:<span class='ml-1' style='color: #d04141;'>{{cityData.name}}</span></h5>\n        </div>\n    </div>\n    <div class='dialog-secction-wrapper' style='padding-top: 30px;'>\n        <div class='w-100' style='padding: 20px; background: #ffe9e9; border-radius: 6px; border: 1px solid #f9dbdb;'>\n            <h6 class='mb-0 font-weight-light'><span class='mr-2 font-weight-bold' style='color: #ff5151;'>Warning:</span>You are about to permanently delete all data associated with this city.</h6>\n        </div>\n    </div>\n    <div class='dialog-footer'>\n        <button mat-stroked-button class='animation pill-button mr-1' (click)='closeDialog(null);' style='background: lightgray; border-color: transparent;'>\n            Cancel\n        </button>\n        <button mat-stroked-button\n        class='animation pill-button danger'\n        [disabled]='deleting'\n        (click)='deleteCity();'>\n            <span>Delete</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './services/http.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'Pedalpost';\n    user = {\n        name: '',\n        email: ''\n    };\n\n    constructor(\n        private https: HttpService\n    ) { }\n\n    ngOnInit(): void {\n        this.https.get('web/getLoggedUser', {}).toPromise().then((user: any) => {\n            this.user = user;\n        }).catch( () =>\n            console.log('No user found')\n        );\n    }\n\n    logout(): void {\n        window.location.replace('logout');\n    }\n}\n","<div style='height: 100vh;'>\n    <mat-drawer-container class=\"main-drawer-container h-100\">\n        <mat-drawer mode=\"side\" opened>\n            <div class='d-flex flex-column h-100' style='min-width: 350px;'>\n                <div class='logo-wrapper pl-3 pr-3 d-flex align-items-center border-bottom' style='height: 70px'>\n                    <img src=\"./assets/angular/assets/pedalpost_horizontal.svg\" alt=\"Pedalpost\" height='48' style='margin-left: -5px;'>\n                </div>\n                <div class='p-3 routes-wrapper' style='flex: 1;'>\n                    <div>\n                        <button\n                        class='animation view-item'\n                        routerLink='overview'\n                        routerLinkActive='view-active shadow'\n                        mat-flat-button>\n                            <h6 class='view-text mb-0 text-left font-weight-bold'><fa-icon icon='home' class='pr-2'></fa-icon>Overview</h6>\n                        </button>\n                    </div>\n                    <div>\n                        <button\n                        class='animation view-item'\n                        routerLink='cities'\n                        routerLinkActive='view-active shadow'\n                        mat-flat-button>\n                            <h6 class='view-text mb-0 text-left font-weight-bold'><fa-icon icon='city' class='pr-2'></fa-icon>Cities</h6>\n                        </button>\n                    </div>\n                    <div>\n                        <button\n                        class='animation view-item'\n                        routerLink='clients'\n                        routerLinkActive='view-active shadow'\n                        mat-flat-button>\n                            <h6 class='view-text mb-0 text-left font-weight-bold'><fa-icon icon='users' class='pr-2'></fa-icon>Clients</h6>\n                        </button>\n                    </div>\n                </div>\n                <div class='border-top d-flex' style='height: 70px;'>\n                    <div class='d-flex pl-3 pr-3 align-items-center h-100' style='flex: 1;'>\n                        <!-- <fa-icon icon='user-circle' class='pr-2' style='font-size: 18px;'></fa-icon> -->\n                        <div>\n                            <h6 class='font-weight-bold mb-1'>{{user.name}}</h6>\n                            <h6 class='font-weight-light mb-0' style='font-size: 14px;'>{{user.email}}</h6>\n\n                        </div>\n                    </div>\n                    <button\n                    mat-button\n                    (click)='logout();'\n                    class='d-flex align-items-center justify-content-center'\n                    style='height: 100%; width: 70px; background-color: black; border-radius: 0px;'>\n                        <fa-icon class='text-white' icon='sign-out-alt' style='font-size: 18px;'></fa-icon>\n                    </button>\n                </div>\n            </div>\n        </mat-drawer>\n        <mat-drawer-content>\n            <div>\n                <router-outlet></router-outlet>\n            </div>\n        </mat-drawer-content>\n    </mat-drawer-container>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\nimport { ClientFormDialogComponent } from './client-form/client-form-dialog.component';\nimport { DeleteClientDialogComponent } from './delete-client/dialog-delete-client.component';\n\n@Component({\n    selector: 'app-clients',\n    templateUrl: './clients.component.html',\n    styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit, OnDestroy {\n    clients = [];\n    gettingClients = false;\n\n    showApiClient = {\n        api_token: null,\n        uuid: null\n    };\n\n    getClientsSubscription: Subscription;\n\n    constructor(\n        private dialog: MatDialog,\n        private https: HttpService\n    ) { }\n\n    ngOnInit(): void {\n        this.getClients();\n    }\n\n    ngOnDestroy(): void {\n        this.getClientsSubscription.unsubscribe();\n    }\n\n    getClients(): void {\n        this.gettingClients = true;\n        this.showApiClient.uuid = null;\n        this.showApiClient.api_token = null;\n\n        this.getClientsSubscription = this.https.get('web/getClients', {}).subscribe((clients: []) => {\n            if (clients) {\n                this.clients = clients;\n                this.gettingClients = false;\n            }\n        });\n    }\n\n    showClientsApiData(uuid): void {\n        if (this.showApiClient.uuid === uuid) {\n            this.showApiClient.uuid = null;\n            this.showApiClient.api_token = null;\n        } else {\n            this.showApiClient.uuid = null;\n            this.showApiClient.api_token = null;\n            this.showApiClient.uuid = uuid;\n\n            this.https.get('web/getClientsToken', {\n                uuid\n            }).toPromise()\n            .then((data: any) => this.showApiClient.api_token = data.api_token)\n            .catch(err => console.log(err));\n        }\n    }\n    updateClientToken(uuid): void {\n        this.showApiClient.api_token = null;\n        this.https.post('web/updateClientToken', {\n            uuid\n        }).toPromise()\n        .then(() => this.getClients())\n        .catch(err => console.log(err));\n    }\n\n    openClientFormDialog(cityData): void {\n        const dialogRef = this.dialog.open(ClientFormDialogComponent, {\n            data: JSON.parse(JSON.stringify(cityData)),\n            autoFocus: false,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            if (data) {\n                this.getClients();\n            }\n        });\n    }\n\n    openDeleteClientDialog(client): void {\n        const dialogRef = this.dialog.open(DeleteClientDialogComponent, {\n            data: client,\n            autoFocus: false,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            if (data) {\n                this.getClients();\n            }\n        });\n    }\n\n}\n","<div>\n    <div class='d-flex align-items-center pl-4 pr-4 border-bottom position-relative view-header-wrapper' style='height: 70px;'>\n        <div>\n            <h4 class='mb-0 font-weight-bold'>Clients</h4>\n        </div>\n        <div class='pl-2 ml-2 border-left'>\n            <button mat-stroked-button class='animation pill-button' (click)='openClientFormDialog(null);'>\n                + Add client\n            </button>\n        </div>\n    </div>\n    <div *ngIf='!gettingClients; else isLoading'>\n        <div *ngIf='clients.length > 0; else isEmpty;' class='w-100 d-flex justify-content-center pl-4 pr-4' style='height: calc(100vh - 70px);'>\n            <div class='pt-3' style='flex:1; max-width: 800px; overflow: auto;'>\n                <div *ngFor='let client of clients' class='border shadow-sm mb-3' style='background: white; border-radius: 6px;'>\n                    <div class='d-flex align-items-center' style='padding: 15px 25px;'>\n                        <div>\n                            <h5 class='mb-0 font-weight-bold'>{{client.name}}</h5>\n                        </div>\n                        <div class='ml-2 pl-2 border-left' style='flex: 1;'>\n                            <button mat-stroked-button class='animation pill-button mr-2' (click)='openClientFormDialog(client);'>\n                                <span><fa-icon icon='pen' [fixedWidth]='true' class='mr-2'></fa-icon>Edit name</span>\n                            </button>\n                        </div>\n                        <div class='ml-2 pl-2 border-left'>\n                            <button mat-stroked-button class='animation pill-button' (click)='showClientsApiData(client.uuid);'>\n                                <span *ngIf='client.uuid !== showApiClient.uuid'><fa-icon icon='eye' [fixedWidth]='true' class='mr-2' style='font-size: 15px;'></fa-icon>Show API info</span>\n                                <span *ngIf='client.uuid === showApiClient.uuid'><fa-icon icon='eye-slash' [fixedWidth]='true' class='mr-2' style='font-size: 15px;'></fa-icon>Hide API info</span>\n                            </button>\n                        </div>\n                        <button mat-stroked-button class='ml-2 animation pill-button danger' (click)='openDeleteClientDialog(client);'>\n                            <span><fa-icon icon='trash' [fixedWidth]='true' class='' style='font-size: 15px;'></fa-icon></span>\n                        </button>\n                    </div>\n                    <div *ngIf='client.uuid === showApiClient.uuid' class='border-top'>\n                        <div *ngIf='showApiClient.api_token; else tokenLoading' style='padding: 25px;'>\n                            <div class='mb-3 d-flex align-items-center'>\n                                <div>\n                                    <h6 class='font-weight-bold mb-0' style='color: #1f2931;'>API Json</h6>\n                                </div>\n                                <div class='ml-2 pl-2 border-left'>\n                                    <button mat-stroked-button class='animation pill-button' (click)='updateClientToken(client.uuid);'>\n                                        <span><fa-icon icon='sync' [fixedWidth]='true' class='mr-2'></fa-icon>Regenerate token</span>\n                                    </button>\n                                </div>\n                            </div>\n<pre class='mb-0'>\n{{ '{' }}\n    'uuid': {{showApiClient.uuid}},\n    'api_token': {{showApiClient.api_token}}\n{{ '}' }}\n</pre>\n                        </div>\n                        <ng-template #tokenLoading>\n                            <div class='spinner d-flex align-items-center justify-content-center' style='padding: 25px;'>\n                                <mat-progress-spinner mode=\"indeterminate\" diameter='24' strokeWidth='4'></mat-progress-spinner>\n                            </div>\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #isLoading>\n        <div class='spinner d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <mat-progress-spinner mode=\"indeterminate\" diameter='30' strokeWidth='4'></mat-progress-spinner>\n        </div>\n    </ng-template>\n    <ng-template #isEmpty>\n        <div class='w-100 d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <h5 class='font-weight-bold' style='color: grey;'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Clients list is empty</h5>\n        </div>\n    </ng-template>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from 'src/app/services/http.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n    selector: 'app-client-form-dialog',\n    templateUrl: './client-form-dialog.component.html',\n    styleUrls: ['./client-form-dialog.component.scss']\n})\nexport class ClientFormDialogComponent implements OnInit {\n    clientForm = {\n        uuid: null,\n        name: '',\n    };\n    savingForm = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public clientData: any,\n        private dialogRef: MatDialogRef<ClientFormDialogComponent>,\n        private https: HttpService,\n        private snackbarService: SnackbarService\n    ) {\n        if (clientData) {\n            this.clientForm = clientData;\n        }\n    }\n\n    ngOnInit(): void {\n    }\n\n    closeDialog(clientData): void {\n        this.dialogRef.close(clientData);\n    }\n\n    submitForm(): void {\n        this.savingForm = true;\n        this.snackbarService.openSnackBar(null, null, 'Saving form...');\n\n        const url = (this.clientData) ? 'web/updateClientName' : 'web/createClient';\n\n        this.https.post(url, {\n            uuid: this.clientForm.uuid,\n            name: this.clientForm.name.trim(),\n        }).toPromise().then(() => {\n            this.snackbarService.openSnackBar(true, 2500, 'Client saved.');\n            this.closeDialog(true);\n        }).catch(err => {\n            this.snackbarService.openSnackBar(false, 2500, 'Failed to save a form.');\n            console.log(err);\n        });\n    }\n\n}\n","<div class='dialog-container'>\n    <div class='dialog-header-wrapper d-flex align-items-center border-bottom'>\n        <div style='flex: 1;'>\n            <h5 *ngIf='clientData' class='font-weight-bold mb-0'>Edit client name</h5>\n            <h5 *ngIf='!clientData' class='font-weight-bold mb-0'>Add new client</h5>\n        </div>\n    </div>\n    <div class='dialog-secction-wrapper' style='padding-top: 30px;'>\n        <div class='w-100'>\n            <mat-form-field class='w-100' appearance=\"outline\">\n                <mat-label>Name of the client</mat-label>\n                <input [(ngModel)]=\"clientForm.name\" matInput placeholder=\"Client\" class='font-weight-bold' style='font-size: 18px;'>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class='dialog-footer'>\n        <button mat-stroked-button class='animation pill-button mr-1' (click)='closeDialog(null);' style='background: lightgray; border-color: transparent;'>\n            Cancel\n        </button>\n        <button mat-stroked-button\n        class='animation pill-button dark'\n        [disabled]='clientForm.name === \"\" || savingForm'\n        (click)='submitForm();'>\n            <span *ngIf='clientData'>Update</span>\n            <span *ngIf='!clientData'>Submit</span>\n        </button>\n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filterByKey'\n})\nexport class FilterByKeyPipe implements PipeTransform {\n    transform(items: any[], searchText?: string, searchProperty?: string): any[] {\n        if (!items || !searchText) { return items; }\n        searchText = searchText.toLowerCase();\n        return items.filter( item => {\n            if (searchProperty) {\n                if (item[searchProperty]) {\n                    return item[searchProperty].toLowerCase().includes(searchText);\n                }\n            } else {\n                return item.toLowerCase().includes(searchText);\n            }\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../../../services/http.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n    selector: 'app-dialog-delete-client',\n    templateUrl: './dialog-delete-client.component.html',\n    styleUrls: ['./dialog-delete-client.component.scss']\n})\nexport class DeleteClientDialogComponent {\n    deleting = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public client: any,\n        private dialogRef: MatDialogRef<DeleteClientDialogComponent>,\n        private https: HttpService,\n        private snackbarService: SnackbarService\n    ) {}\n\n    closeDialog(deleteClient): void {\n        this.dialogRef.close(deleteClient);\n    }\n\n    deleteClient(): void {\n        this.deleting = true;\n        this.snackbarService.openSnackBar(null, null, 'Deleting...');\n        this.https.post('web/deleteClient', {\n            uuid: this.client.uuid\n        }).toPromise().then(response => {\n            if (response) {\n                this.snackbarService.openSnackBar(true, 1500, \"Client deleted\");\n                this.closeDialog(true);\n            } else {\n                this.snackbarService.openSnackBar(false, 2500, \"We couldn't delete this client. Please try again.\");\n                this.closeDialog(false);\n            }\n        }).catch(err => {\n            this.snackbarService.openSnackBar(false, 2500, \"Something went wrong. Please try again.\");\n            console.log(err)\n        });\n    }\n}\n","<div class='dialog-container'>\n    <div class='dialog-header-wrapper d-flex align-items-center border-bottom'>\n        <div style='flex: 1;'>\n            <h5 class='font-weight-bold mb-0'>Delete client:<span class='ml-1' style='color: #d04141;'>{{client.name}}</span></h5>\n        </div>\n    </div>\n    <div class='dialog-secction-wrapper' style='padding-top: 30px;'>\n        <div class='w-100' style='padding: 20px; background: #ffe9e9; border-radius: 6px; border: 1px solid #f9dbdb;'>\n            <h6 class='mb-0 font-weight-light'><span class='mr-2 font-weight-bold' style='color: #ff5151;'>Warning:</span>By deleting this client you will also delete every order made by this client.</h6>\n        </div>\n    </div>\n    <div class='dialog-footer'>\n        <button mat-stroked-button class='animation pill-button mr-1' (click)='closeDialog(null);' style='background: lightgray; border-color: transparent;'>\n            Cancel\n        </button>\n        <button mat-stroked-button\n        class='animation pill-button danger'\n        [disabled]='deleting'\n        (click)='deleteClient();'>\n            <span>Delete</span>\n        </button>\n    </div>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-snackbar-message',\n    templateUrl: './snackbar-message.component.html',\n})\nexport class SnackbarMessageComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data) {}\n}\n","<div class=\"d-flex align-items-center\">\n    <div class='mr-2 pr-2'style='flex: 1;'>\n        <h6 class=\"mb-0\" style='color: white; font-size: 14px;'>{{data.message}}</h6>\n    </div>\n    <div class=\"align-right\">\n        <span *ngIf='data.processed == null'>\n            <fa-icon icon='spinner'\n            [fixedWidth]=\"true\"\n            [pulse]=\"true\"\n            style=\"font-size: 14px;\"></fa-icon>\n        </span>\n        <span *ngIf=\"data.processed == false\">\n            <fa-icon icon='exclamation-triangle'\n            style=\"font-size: 14px; color: #ffad45;\"></fa-icon>\n        </span>\n        <span *ngIf=\"data.processed\">\n            <fa-icon icon='check-circle'\n            style=\"font-size: 14px; color: #38ff65;\"></fa-icon>\n        </span>\n    </div>   \n</div>","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// COMPONENTS\nimport { OverviewComponent } from './components/overview/overview.component';\nimport { CitiesComponent } from './components/cities/cities.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SnackbarMessageComponent } from './components/snackbar/snackbar-message.component';\n\n// DIALOGS\nimport { CityFormDialogComponent } from './components/cities/city-form/dialog-city-form.component';\nimport { DeleteCityDialogComponent } from './components/cities/delete-city/dialog-delete-city.component';\nimport { DeleteClientDialogComponent } from './components/clients/delete-client/dialog-delete-client.component';\n\n// FONT AWESOME\nimport {FontAwesomeIconsModule} from './modules/font-awesome-icons.module';\n\n// MATERIAL MODULE\nimport { MaterialModule } from './modules/material.module';\n\n// PIPES\nimport { FilterByKeyPipe } from './pipes/filter.pipe';\n\n// SERVICES\nimport { HttpService } from './services/http.service';\nimport { SnackbarService } from './services/snackbar.service';\nimport { ClientFormDialogComponent } from './components/clients/client-form/client-form-dialog.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        OverviewComponent,\n        FilterByKeyPipe,\n        CitiesComponent,\n        CityFormDialogComponent,\n        DeleteCityDialogComponent,\n        SnackbarMessageComponent,\n        ClientsComponent,\n        ClientFormDialogComponent,\n        DeleteClientDialogComponent\n    ],\n    imports: [\n        BrowserModule,\n        CommonModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MaterialModule,\n        FontAwesomeIconsModule,\n        HttpClientModule\n    ],\n    providers: [\n        HttpService,\n        SnackbarService\n    ],\n    entryComponents: [\n        SnackbarMessageComponent,\n        CityFormDialogComponent,\n        DeleteCityDialogComponent,\n        ClientFormDialogComponent,\n        DeleteClientDialogComponent\n    ],\n    schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../../../services/http.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n    selector: 'app-dialog-city-form',\n    templateUrl: './dialog-city-form.component.html',\n    styleUrls: ['./dialog-city-form.component.scss']\n})\nexport class CityFormDialogComponent {\n    savingForm = false;\n\n    cityForm = {\n        id: null,\n        name: '',\n        zip_codes: [],\n        capacity_schedule: []\n    };\n\n    weekArray = [\n        'Mo',\n        'Tu',\n        'We',\n        'Th',\n        'Fr',\n        'Sa',\n        'Su'\n    ];\n\n    showNewCodesInput = false;\n    newCodesInput = '';\n\n    showScheduleForm = false;\n    scheduleRowForm = {\n        time_from: '00:00',\n        time_to: '00:00',\n        capacity: 0,\n        time_id: '',\n        availability_trough_week: [\n            {\n                day: 'monday',\n                day_number: 1,\n                available: false\n            },\n            {\n                day: 'tuesday',\n                day_number: 2,\n                available: false\n            },\n            {\n                day: 'wednesday',\n                day_number: 3,\n                available: false\n            },\n            {\n                day: 'thursday',\n                day_number: 4,\n                available: false\n            },\n            {\n                day: 'friday',\n                day_number: 5,\n                available: false\n            },\n            {\n                day: 'saturday',\n                day_number: 6,\n                available: false\n            },\n            {\n                day: 'sunday',\n                day_number: 7,\n                available: false\n            }\n        ]\n    };\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public cityData: any,\n        private dialogRef: MatDialogRef<CityFormDialogComponent>,\n        private https: HttpService,\n        private snackbarService: SnackbarService\n    ) {\n        if (cityData) {\n            this.cityForm = cityData;\n        }\n    }\n\n    closeDialog(cityData): void {\n        this.dialogRef.close(cityData);\n    }\n\n    addNewCodes(save): void {\n        if (save) {\n            this.newCodesInput = this.newCodesInput.replace(/\\s/g, '');\n            const codeArray = this.newCodesInput.split(',');\n            if (codeArray.length > 0) {\n                for (const code of codeArray) {\n                    if (code.trim() !== '') {\n                        if (this.cityForm.zip_codes.indexOf(code) === -1) {\n                            this.cityForm.zip_codes.push(code);\n                        }\n                    }\n                }\n            }\n            this.showNewCodesInput = false;\n        }\n        this.showNewCodesInput = false;\n        this.newCodesInput = '';\n    }\n\n    removeZipCode(listIndex): void {\n        this.cityForm.zip_codes.splice(listIndex, 1);\n    }\n\n    addNewTimeRow(): void {\n        this.cityForm.capacity_schedule.push(JSON.parse(JSON.stringify(this.scheduleRowForm)));\n    }\n\n    removeTimeRow(listIndex): void {\n        this.cityForm.capacity_schedule.splice(listIndex, 1);\n    }\n\n    submitForm(): void {\n        this.snackbarService.openSnackBar(null, null, 'Saving form...');\n        this.savingForm = true;\n\n        for (let schedule of this.cityForm.capacity_schedule) {\n            const time_from = schedule.time_from.replaceAll(\":\", \"\");\n            const time_to = schedule.time_to.replaceAll(\":\", \"\");\n            schedule.time_id = time_from.concat(time_to);\n\n        }\n\n        this.https.post('web/updateOrCreateCity', {\n            id: this.cityForm.id,\n            city_name: this.cityForm.name,\n            zip_codes: JSON.stringify(this.cityForm.zip_codes),\n            time_capacity: JSON.stringify(this.cityForm.capacity_schedule)\n        }).toPromise().then((data) => {\n            this.snackbarService.openSnackBar(true, 2500, 'Form saved.');\n            this.savingForm = false;\n            this.closeDialog(true);\n        }).catch(err => {\n            this.snackbarService.openSnackBar(false, 2500, 'Failed to save a form.');\n            console.log(err);\n        });\n    }\n}\n","<div class='dialog-container'>\n    <div class='dialog-header-wrapper d-flex align-items-center border-bottom'>\n        <div style='flex: 1;'>\n            <h5 *ngIf='cityData' class='font-weight-bold mb-0'>Edit city</h5>\n            <h5 *ngIf='!cityData' class='font-weight-bold mb-0'>Add new city</h5>\n        </div>\n    </div>\n    <div class='dialog-secction-wrapper' style='padding-top: 30px;'>\n        <div class='w-100'>\n            <mat-form-field class='w-100' appearance=\"outline\">\n                <mat-label>Name of the city</mat-label>\n                <input [(ngModel)]=\"cityForm.name\" matInput placeholder=\"City\" class='font-weight-bold' style='font-size: 18px;'>\n            </mat-form-field>\n        </div>\n        <hr>\n        <div class='w-100'>\n            <div class='mb-3 d-flex align-items-center'>\n                <div class='pr-2 mr-2 border-right'>\n                    <h6 class='mb-0 font-weight-bold'>Supported zip codes</h6>\n                </div>\n                <button *ngIf='!showNewCodesInput' mat-stroked-button class='animation pill-button' (click)='showNewCodesInput = true;'>\n                    + Add codes\n                </button>\n                <div *ngIf='showNewCodesInput'>\n                    <button mat-stroked-button class='animation pill-button mr-1' (click)='addNewCodes(false);' style='background: lightgray; border-color: transparent;'>\n                        Cancel\n                    </button>\n                    <button mat-stroked-button class='animation pill-button dark' (click)='addNewCodes(true);'>\n                        + Add\n                    </button>\n                </div>\n            </div>\n            <div *ngIf='showNewCodesInput' class='d-flex mb-4'>\n                <mat-form-field class='w-100' appearance=\"outline\">\n                    <mat-label>Supported zip codes</mat-label>\n                    <input [(ngModel)]=\"newCodesInput\"\n                    matInput\n                    placeholder=\"Enter zip codes\"\n                    class='font-weight-bold' style='font-size: 18px;'\n                    (keydown.enter)=\"addNewCodes(true);\">\n                    <mat-hint class='font-weight-bold'><span class='mr-1' style='color: #e87700;'>Important:</span>To add multiple zip codes, please seperate each code with comma ( , ) symbol. E.g.<span class='ml-1' style='color: black;'>0026, 0037, 0159...</span></mat-hint>\n                </mat-form-field>\n            </div>\n            <div *ngIf='cityForm.zip_codes.length > 0; else indexIsEmpty;' class='d-flex flex-wrap'>\n                <div *ngFor='let code of cityForm.zip_codes; let zip_index = index' class='animation zip-code-pill'>\n                    <h6 class='mb-0 font-weight-bold' style='flex: 1;'>{{code}}</h6>\n                    <fa-icon icon='times-circle' (click)='removeZipCode(zip_index);' class='ml-2' style='margin-right: -5px; color: #ff5151;'></fa-icon>\n                </div>\n            </div>\n            <ng-template #indexIsEmpty>\n                <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                    <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Zip codes list is empty</h6>\n                </div>\n            </ng-template>\n        </div>\n        <hr>\n        <div class='w-100'>\n            <div class='mb-3 d-flex align-items-center'>\n                <div class='pr-2 mr-2 border-right'>\n                    <h6 class='mb-0 font-weight-bold'>Available capacity schedule</h6>\n                </div>\n                <button *ngIf='!showScheduleForm' mat-stroked-button class='animation pill-button' (click)='addNewTimeRow();'>\n                    + Add row\n                </button>\n            </div>\n            <div *ngIf='cityForm.capacity_schedule.length > 0; else scheduleIsEmpty;'>\n                <div class='d-flex align-items-center' style='height: 30px; border-bottom: 1px solid #6c757d;'>\n                    <div style='width: 300px;'class='mr-2 pr-2 border-right'>\n                        <h6 class='mb-0 column-header-label'>Available time frame</h6>\n                    </div>\n                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                        <h6 class='mb-0 column-header-label'>Capacity</h6>\n                    </div>\n                    <div class='d-flex' style='flex:3;'>\n                        <div *ngFor='let day of weekArray' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                            <h6 class='mb-0 column-header-label'>{{day}}</h6>\n                        </div>\n                    </div>\n                    <div style='width: 30px;'></div>\n                </div>\n                <div *ngFor='let time_row of cityForm.capacity_schedule; let i = index;' class='d-flex align-items-center' style='border-bottom: 1px solid #B2BBBC; height: 40px;'>\n                    <div style='width: 300px;' class='mr-2 pr-2 border-right d-flex align-items-center'>\n                        <input [(ngModel)]=\"time_row.time_from\"\n                        matInput\n                        type=\"time\"\n                        placeholder=\"00:00\"\n                        class='font-weight-bold' style='font-size: 18px;'>\n                        <h4 class='mr-2 ml-2 mb-0' style='font-size: 18px;'>/</h4>\n                        <input [(ngModel)]=\"time_row.time_to\"\n                        matInput\n                        type=\"time\"\n                        placeholder=\"00:00\"\n                        class='font-weight-bold' style='font-size: 18px;'>\n                    </div>\n                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                        <input [(ngModel)]=\"time_row.capacity\"\n                        matInput\n                        type=\"number\"\n                        placeholder=\"0\"\n                        class='font-weight-bold' style='font-size: 18px;'>\n                    </div>\n                    <div class='d-flex' style='flex:3;'>\n                        <div *ngFor='let day of time_row.availability_trough_week' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                            <mat-checkbox class=\"example-margin\"\n                            [(ngModel)]=\"day.available\"\n                            [checked]=\"day.available\">\n                            </mat-checkbox>\n                        </div>\n                    </div>\n                    <div style='width: 30px;'>\n                        <div class='d-flex align-items-center justify-content-center'\n                        style='width: 30px; height: 30px; cursor: pointer; margin-left: -4px;'\n                        (click)='removeTimeRow(i);'>\n                            <fa-icon icon='times-circle' style='font-size: 16px; color: #ff5151;'></fa-icon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ng-template #scheduleIsEmpty>\n                <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                    <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Capacity schedule list is empty</h6>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n    <div class='dialog-footer'>\n        <button mat-stroked-button class='animation pill-button mr-1' (click)='closeDialog(null);' style='background: lightgray; border-color: transparent;'>\n            Cancel\n        </button>\n        <button mat-stroked-button\n        class='animation pill-button dark'\n        (click)='submitForm();'\n        [disabled]='cityForm.capacity_schedule.length === 0 || cityForm.zip_codes.length === 0 || cityForm.name === \"\" || savingForm'>\n            <span *ngIf='cityData'>Update</span>\n            <span *ngIf='!cityData'>Submit</span>\n        </button>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpService } from './../../services/http.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CityFormDialogComponent } from './city-form/dialog-city-form.component';\nimport { DeleteCityDialogComponent } from './delete-city/dialog-delete-city.component';\n\n@Component({\n    selector: 'app-cities',\n    templateUrl: './cities.component.html',\n    styleUrls: ['./cities.component.scss']\n})\nexport class CitiesComponent implements OnInit {\n    cities = [];\n    gettingCities = true;\n\n    weekArray = [\n        'Mo',\n        'Tu',\n        'We',\n        'Th',\n        'Fr',\n        'Sa',\n        'Su'\n    ];\n\n    constructor(\n        private dialog: MatDialog,\n        private https: HttpService\n    ) { }\n\n    ngOnInit(): void {\n        this.getCities();\n    }\n\n    getCities(): void {\n        this.gettingCities = true;\n        this.https.get('web/getCities', {}).subscribe((cities: []) => {\n            if (cities) {\n                this.cities = cities;\n                this.gettingCities = false;\n            }\n        });\n    }\n\n    openCityFormDialog(cityData): void {\n        const dialogRef = this.dialog.open(CityFormDialogComponent, {\n            data: JSON.parse(JSON.stringify(cityData)),\n            autoFocus: false,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            if (data) {\n                this.getCities();\n            }\n        });\n    }\n\n    openDeleteCityDialog(cityData): void {\n        const dialogRef = this.dialog.open(DeleteCityDialogComponent, {\n            data: JSON.parse(JSON.stringify(cityData)),\n            autoFocus: false,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            if (data) {\n                this.getCities();\n            }\n        });\n    }\n\n}\n","<div>\n    <div class='d-flex align-items-center pl-4 pr-4 border-bottom position-relative view-header-wrapper' style='height: 70px;'>\n        <div>\n            <h4 class='mb-0 font-weight-bold'>Cities</h4>\n        </div>\n        <div class='pl-2 ml-2 border-left'>\n            <button mat-stroked-button class='animation pill-button' (click)='openCityFormDialog(null);'>\n                + Add city\n            </button>\n        </div>\n    </div>\n    <div *ngIf='!gettingCities; else isLoading'>\n        <div *ngIf='cities.length > 0; else isEmpty;'>\n            <input placeholder=\"Search city...\" autocomplete=\"off\" class='animation border-bottom search-cities-wrapper' [(ngModel)]=\"citySearchInput\">\n            <div class='list-cities'>\n                <div *ngFor='let city of cities | filterByKey : citySearchInput : \"name\"' class='city-container shadow-sm'>\n                    <div class='city-container-header border-bottom'>\n                        <div class='d-flex align-items-center' style='flex: 1;'>\n                            <h5 class='mb-0 font-weight-bold'>{{city.name}}</h5>\n                            <div class='pl-2 ml-2 border-left d-flex'>\n                                <button mat-stroked-button class='animation pill-button' (click)='openCityFormDialog(city);'>\n                                    <fa-icon icon='pen' [fixedWidth]='true' class='mr-2'></fa-icon>Edit\n                                </button>\n                                <button mat-stroked-button class='animation pill-button danger ml-2' (click)='openDeleteCityDialog(city);'>\n                                    <fa-icon icon='trash' [fixedWidth]='true' class='mr-2'></fa-icon>Delete\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='city-container-body'>\n                        <div>\n                            <h6 class=\"mb-3 font-weight-bold section-title\">Supported zip codes</h6>\n                            <div>\n                                <div *ngIf='city.zip_codes.length > 0; else indexIsEmpty;' class='d-flex flex-wrap'>\n                                    <div *ngFor='let code of city.zip_codes' class='animation zip-code-pill'>\n                                        <h6 class='mb-0 font-weight-bold' style='flex: 1;'>{{code}}</h6>\n                                    </div>\n                                </div>\n                                <ng-template #indexIsEmpty>\n                                    <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                                        <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Zip codes list is empty</h6>\n                                    </div>\n                                </ng-template>\n                            </div>\n                        </div>\n                        <hr>\n                        <div class='w-100'>\n                            <h6 class=\"mb-3 font-weight-bold section-title\">Available capacity schedule</h6>\n                            <div *ngIf='city.capacity_schedule.length > 0; else scheduleIsEmpty;'>\n                                <div class='d-flex align-items-center' style='height: 30px; border-bottom: 1px solid #6c757d;'>\n                                    <div style='width: 300px;' class='mr-2 pr-2 border-right ellipsis'>\n                                        <h6 class='mb-0 column-header-label ellipsis' style='font-size: 14px; font-weight: 400;'>Available time frame</h6>\n                                    </div>\n                                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                                        <h6 class='mb-0 column-header-label' style='font-size: 14px; font-weight: 400;'>Capacity</h6>\n                                    </div>\n                                    <div class='d-flex' style='flex:3;'>\n                                        <div *ngFor='let day of weekArray' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                                            <h6 class='mb-0 column-header-label' style='font-size: 14px; font-weight: 400;'>{{day}}</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div *ngFor='let time_row of city.capacity_schedule' class='d-flex align-items-center' style='border-bottom: 1px solid #B2BBBC; height: 40px;'>\n                                    <div style='width: 300px;' class='mr-2 pr-2 border-right d-flex align-items-center'>\n                                        <h6 class='font-weight-bold mb-0'>{{time_row.time_from}}</h6>\n                                        <h6 class='mr-2 ml-2 mb-0'>/</h6>\n                                        <h6 class='font-weight-bold mb-0'>{{time_row.time_to}}</h6>\n                                    </div>\n                                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                                        <h6 class='font-weight-bold mb-0'>{{time_row.capacity}}</h6>\n                                    </div>\n                                    <div class='d-flex' style='flex:3;'>\n                                        <div *ngFor='let day of time_row.availability_trough_week' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                                            <mat-checkbox class=\"example-margin\"\n                                            [checked]=\"day.available\"\n                                            [disabled]='true'>\n                                            </mat-checkbox>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <ng-template #scheduleIsEmpty>\n                                <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                                    <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Capacity schedule list is empty</h6>\n                                </div>\n                            </ng-template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #isLoading>\n        <div class='spinner d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <mat-progress-spinner mode=\"indeterminate\" diameter='30' strokeWidth='4'></mat-progress-spinner>\n        </div>\n    </ng-template>\n    <ng-template #isEmpty>\n        <div class='w-100 d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <h5 class='font-weight-bold' style='color: grey;'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Cities list is empty</h5>\n        </div>\n    </ng-template>\n</div>\n","import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatProgressSpinnerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatSnackBarModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatProgressSpinnerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatSnackBarModule\n    ]\n})\nexport class MaterialModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError} from 'rxjs/operators';\nimport {throwError} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n    constructor(\n        private https: HttpClient\n    ) { }\n\n    // tslint:disable-next-line:typedef\n    get(url, params) {\n        return this.https.get(url, {\n            params\n        }).pipe(catchError((err: HttpErrorResponse) => {\n            if (err.status === 401 || err.status === 440) {\n                window.location.replace('/logout');\n                return throwError(err);\n            }  else if (!err.ok) {\n                return throwError(false);\n            }\n        }));\n    }\n\n    // tslint:disable-next-line:typedef\n    post(url, params) {\n        return this.https.post(url, params).pipe(\n            catchError((err: HttpErrorResponse) => {\n                if (err.status === 401 || err.status === 440) {\n                    window.location.replace('/logout');\n                    return throwError(err);\n                } else if (err.status === 422) {\n                    return throwError(err.error.errors);\n                }  else if (!err.ok) {\n                    return throwError(false);\n                }\n            })\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\n\n// FONT AWESOME\nimport { FontAwesomeModule, FaIconLibrary, FaConfig } from '@fortawesome/angular-fontawesome';\nimport {} from '@fortawesome/free-regular-svg-icons';\nimport {\n    faCity, faFolder, faFolderOpen, faHome, faPlus, faSave, faSignOutAlt,\n    faTimes, faTimesCircle, faUserCircle, faSpinner, faExclamationTriangle, faCheckCircle, faSearch,\n    faEdit, faPen, faTrash, faEnvelope, faUsers, faEye, faEyeSlash, faSync,\n} from '@fortawesome/free-solid-svg-icons';\n\n@NgModule({\n    imports: [ FontAwesomeModule ],\n    exports: [ FontAwesomeModule ]\n})\n\nexport class FontAwesomeIconsModule {\n    constructor(\n        faConfig: FaConfig,\n        library: FaIconLibrary\n    ) {\n        faConfig.fixedWidth = true;\n        library.addIcons(\n            faHome, faCity, faUserCircle, faSignOutAlt, faPlus, faFolder, faFolderOpen,\n            faTimes, faTimesCircle, faSave, faSpinner, faExclamationTriangle, faCheckCircle, faSearch,\n            faEdit, faPen, faTrash, faEnvelope, faUsers, faEye, faEyeSlash, faSync\n        );\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SnackbarMessageComponent } from '../components/snackbar/snackbar-message.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SnackbarService {\n    constructor(private snackbar: MatSnackBar) {}\n\n    openSnackBar(processed, duration, message): void {\n        this.snackbar.openFromComponent(SnackbarMessageComponent, {\n            duration,\n            data: {processed, message}\n        });\n    }\n    dismissSnackBar(): void {\n        this.snackbar.dismiss();\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { OverviewComponent } from './components/overview/overview.component';\nimport { CitiesComponent } from './components/cities/cities.component';\nimport { ClientsComponent } from './components/clients/clients.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'overview',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        redirectTo: 'overview',\n        pathMatch: 'full'\n    },\n    {\n        path: 'overview',\n        component: OverviewComponent\n    },\n    {\n        path: 'cities',\n        component: CitiesComponent\n    },\n    {\n        path: 'clients',\n        component: ClientsComponent\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {\n            onSameUrlNavigation: 'reload',\n            preloadingStrategy: PreloadAllModules\n        })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}