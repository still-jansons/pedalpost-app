{"version":3,"sources":["webpack:///resources/frontend/angular/src/app/components/overview/overview.component.ts","webpack:///resources/frontend/angular/src/app/components/overview/overview.component.html","webpack:///resources/frontend/angular/src/app/components/cities/delete-city/dialog-delete-city.component.ts","webpack:///resources/frontend/angular/src/app/components/cities/delete-city/dialog-delete-city.component.html","webpack:///resources/frontend/angular/src/app/app.component.ts","webpack:///resources/frontend/angular/src/app/app.component.html","webpack:///resources/frontend/angular/src/app/components/clients/clients.component.ts","webpack:///resources/frontend/angular/src/app/components/clients/clients.component.html","webpack:///resources/frontend/angular/src/app/components/clients/client-form/client-form-dialog.component.ts","webpack:///resources/frontend/angular/src/app/components/clients/client-form/client-form-dialog.component.html","webpack:///resources/frontend/angular/src/app/pipes/filter.pipe.ts","webpack:///resources/frontend/angular/src/app/components/snackbar/snackbar-message.component.ts","webpack:///resources/frontend/angular/src/app/components/snackbar/snackbar-message.component.html","webpack:///resources/frontend/angular/src/app/app.module.ts","webpack:///resources/frontend/angular/src/app/components/cities/city-form/dialog-city-form.component.ts","webpack:///resources/frontend/angular/src/app/components/cities/city-form/dialog-city-form.component.html","webpack:///resources/frontend/angular/src/environments/environment.ts","webpack:///resources/frontend/angular/src/app/components/cities/cities.component.ts","webpack:///resources/frontend/angular/src/app/components/cities/cities.component.html","webpack:///resources/frontend/angular/src/app/modules/material.module.ts","webpack:///resources/frontend/angular/src/app/services/http.service.ts","webpack:///resources/frontend/angular/src/app/modules/font-awesome-icons.module.ts","webpack:///resources/frontend/angular/src/app/services/snackbar.service.ts","webpack:///resources/frontend/angular/src/main.ts","webpack:///resources/frontend/angular/src/app/app-routing.module.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["OverviewComponent","DeleteCityDialogComponent","cityData","dialogRef","https","snackbarService","deleting","close","openSnackBar","post","city_id","id","toPromise","then","closeDialog","err","console","log","deleteCity","AppComponent","title","user","name","email","get","window","location","replace","logout","ClientsComponent","dialog","clients","gettingClients","showApiClient","api_token","uuid","getClients","getClientsSubscription","unsubscribe","subscribe","data","open","JSON","parse","stringify","autoFocus","disableClose","afterClosed","openClientFormDialog","ClientFormDialogComponent","clientData","clientForm","savingForm","url","trim","submitForm","FilterByKeyPipe","items","searchText","searchProperty","toLowerCase","filter","item","includes","SnackbarMessageComponent","AppModule","CityFormDialogComponent","cityForm","zip_codes","capacity_schedule","weekArray","showNewCodesInput","newCodesInput","showScheduleForm","scheduleRowForm","time_from","time_to","capacity","Number","time_id","availability_trough_week","day","day_number","available","save","codeArray","split","length","code","indexOf","push","listIndex","splice","schedule","replaceAll","concat","city_name","time_capacity","environment","production","CitiesComponent","cities","gettingCities","getCities","openCityFormDialog","MaterialModule","HttpService","params","pipe","status","ok","error","errors","FontAwesomeIconsModule","faConfig","library","fixedWidth","addIcons","SnackbarService","snackbar","processed","duration","message","openFromComponent","dismiss","bootstrapModule","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","onSameUrlNavigation","preloadingStrategy","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-overview',\n    templateUrl: './overview.component.html',\n    styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n\n    }\n\n}\n","<div>\n    <div class='d-flex align-items-center pl-4 pr-4 border-bottom position-relative view-header-wrapper' style='height: 70px;'>\n        <div>\n            <h4 class='mb-0 font-weight-bold'>Overview</h4>\n        </div>\n    </div>\n    <div>\n        \n    </div>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../../../services/http.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n    selector: 'app-dialog-city-form',\n    templateUrl: './dialog-delete-city.component.html',\n    styleUrls: ['./dialog-delete-city.component.scss']\n})\nexport class DeleteCityDialogComponent {\n    deleting = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public cityData: any,\n        private dialogRef: MatDialogRef<DeleteCityDialogComponent>,\n        private https: HttpService,\n        private snackbarService: SnackbarService\n    ) {}\n\n    closeDialog(cityData): void {\n        this.dialogRef.close(cityData);\n    }\n\n    deleteCity(): void {\n        this.deleting = true;\n        this.snackbarService.openSnackBar(null, null, 'Deleting...');\n        this.https.post('web/deleteCity', {\n            city_id: this.cityData.id\n        }).toPromise().then(() => {\n            this.deleting = false;\n            this.snackbarService.openSnackBar(true, 2500, 'Deleted.');\n            this.closeDialog(true);\n        }).catch(err => {\n            this.deleting = false;\n            this.snackbarService.openSnackBar(false, 2500, 'Something went wrong. Please try again.');\n            console.log(err);\n        });\n    }\n}\n","<div class='dialog-container'>\n    <div class='dialog-header-wrapper d-flex align-items-center border-bottom'>\n        <div style='flex: 1;'>\n            <h5 class='font-weight-bold mb-0'>Delete city:<span class='ml-1' style='color: #d04141;'>{{cityData.name}}</span></h5>\n        </div>\n    </div>\n    <div class='dialog-secction-wrapper' style='padding-top: 30px;'>\n        <div class='w-100' style='padding: 20px; background: #ffe9e9; border-radius: 6px; border: 1px solid #f9dbdb;'>\n            <h6 class='mb-0 font-weight-light'><span class='mr-2 font-weight-bold' style='color: #ff5151;'>Warning:</span>You are about to permanently delete all data associated with this city.</h6>\n        </div>\n    </div>\n    <div class='dialog-footer'>\n        <button mat-stroked-button class='animation pill-button mr-1' (click)='closeDialog(null);' style='background: lightgray; border-color: transparent;'>\n            Cancel\n        </button>\n        <button mat-stroked-button\n        class='animation pill-button danger'\n        [disabled]='deleting'\n        (click)='deleteCity();'>\n            <span>Delete</span>\n        </button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './services/http.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n    title = 'Pedalpost';\n    user = {\n        name: '',\n        email: ''\n    };\n\n    constructor(\n        private https: HttpService\n    ) { }\n\n    ngOnInit(): void {\n        this.https.get('web/getLoggedUser', {}).toPromise().then((user: any) => {\n            this.user = user;\n        }).catch( () =>\n            console.log('No user found')\n        );\n    }\n\n    logout(): void {\n        window.location.replace('logout');\n    }\n}\n","<div style='height: 100vh;'>\n    <mat-drawer-container class=\"main-drawer-container h-100\">\n        <mat-drawer mode=\"side\" opened>\n            <div class='d-flex flex-column h-100' style='min-width: 350px;'>\n                <div class='logo-wrapper pl-3 pr-3 d-flex align-items-center border-bottom' style='height: 70px'>\n                    <img src=\"./assets/angular/assets/pedalpost_horizontal.svg\" alt=\"Pedalpost\" height='48' style='margin-left: -5px;'>\n                </div>\n                <div class='p-3 routes-wrapper' style='flex: 1;'>\n                    <div>\n                        <button\n                        class='animation view-item'\n                        routerLink='overview'\n                        routerLinkActive='view-active shadow'\n                        mat-flat-button>\n                            <h6 class='view-text mb-0 text-left font-weight-bold'><fa-icon icon='home' class='pr-2'></fa-icon>Overview</h6>\n                        </button>\n                    </div>\n                    <div>\n                        <button\n                        class='animation view-item'\n                        routerLink='cities'\n                        routerLinkActive='view-active shadow'\n                        mat-flat-button>\n                            <h6 class='view-text mb-0 text-left font-weight-bold'><fa-icon icon='city' class='pr-2'></fa-icon>Cities</h6>\n                        </button>\n                    </div>\n                    <div>\n                        <button\n                        class='animation view-item'\n                        routerLink='clients'\n                        routerLinkActive='view-active shadow'\n                        mat-flat-button>\n                            <h6 class='view-text mb-0 text-left font-weight-bold'><fa-icon icon='users' class='pr-2'></fa-icon>Clients</h6>\n                        </button>\n                    </div>\n                </div>\n                <div class='border-top d-flex' style='height: 70px;'>\n                    <div class='d-flex pl-3 pr-3 align-items-center h-100' style='flex: 1;'>\n                        <!-- <fa-icon icon='user-circle' class='pr-2' style='font-size: 18px;'></fa-icon> -->\n                        <div>\n                            <h6 class='font-weight-bold mb-1'>{{user.name}}</h6>\n                            <h6 class='font-weight-light mb-0' style='font-size: 14px;'>{{user.email}}</h6>\n\n                        </div>\n                    </div>\n                    <button\n                    mat-button\n                    (click)='logout();'\n                    class='d-flex align-items-center justify-content-center'\n                    style='height: 100%; width: 70px; background-color: black; border-radius: 0px;'>\n                        <fa-icon class='text-white' icon='sign-out-alt' style='font-size: 18px;'></fa-icon>\n                    </button>\n                </div>\n            </div>\n        </mat-drawer>\n        <mat-drawer-content>\n            <div>\n                <router-outlet></router-outlet>\n            </div>\n        </mat-drawer-content>\n    </mat-drawer-container>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\nimport { ClientFormDialogComponent } from './client-form/client-form-dialog.component';\n\n@Component({\n    selector: 'app-clients',\n    templateUrl: './clients.component.html',\n    styleUrls: ['./clients.component.scss']\n})\nexport class ClientsComponent implements OnInit, OnDestroy {\n    clients = [];\n    gettingClients = false;\n\n    showApiClient = {\n        api_token: null,\n        uuid: null\n    };\n\n    getClientsSubscription: Subscription;\n\n    constructor(\n        private dialog: MatDialog,\n        private https: HttpService\n    ) { }\n\n    ngOnInit(): void {\n        this.getClients();\n    }\n\n    ngOnDestroy(): void {\n        this.getClientsSubscription.unsubscribe();\n    }\n\n    getClients(): void {\n        this.gettingClients = true;\n        this.showApiClient.uuid = null;\n        this.showApiClient.api_token = null;\n\n        this.getClientsSubscription = this.https.get('web/getClients', {}).subscribe((clients: []) => {\n            if (clients) {\n                this.clients = clients;\n                this.gettingClients = false;\n            }\n        });\n    }\n\n    showClientsApiData(uuid): void {\n        if (this.showApiClient.uuid === uuid) {\n            this.showApiClient.uuid = null;\n            this.showApiClient.api_token = null;\n        } else {\n            this.showApiClient.uuid = null;\n            this.showApiClient.api_token = null;\n            this.showApiClient.uuid = uuid;\n\n            this.https.get('web/getClientsToken', {\n                uuid\n            }).toPromise()\n            .then((data: any) => this.showApiClient.api_token = data.api_token)\n            .catch(err => console.log(err));\n        }\n    }\n    updateClientToken(uuid): void {\n        this.showApiClient.api_token = null;\n        this.https.post('web/updateClientToken', {\n            uuid\n        }).toPromise()\n        .then(() => this.getClients())\n        .catch(err => console.log(err));\n    }\n\n    openClientFormDialog(cityData): void {\n        const dialogRef = this.dialog.open(ClientFormDialogComponent, {\n            data: JSON.parse(JSON.stringify(cityData)),\n            autoFocus: false,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            if (data) {\n                this.getClients();\n            }\n        });\n    }\n\n}\n","<div>\n    <div class='d-flex align-items-center pl-4 pr-4 border-bottom position-relative view-header-wrapper' style='height: 70px;'>\n        <div>\n            <h4 class='mb-0 font-weight-bold'>Clients</h4>\n        </div>\n        <div class='pl-2 ml-2 border-left'>\n            <button mat-stroked-button class='animation pill-button' (click)='openClientFormDialog(null);'>\n                + Add client\n            </button>\n        </div>\n    </div>\n    <div *ngIf='!gettingClients; else isLoading'>\n        <div *ngIf='clients.length > 0; else isEmpty;' class='w-100 d-flex justify-content-center pl-4 pr-4' style='height: calc(100vh - 70px);'>\n            <div class='pt-3' style='flex:1; max-width: 800px; overflow: auto;'>\n                <div *ngFor='let client of clients' class='border shadow-sm mb-3' style='background: white; border-radius: 6px;'>\n                    <div class='d-flex align-items-center' style='padding: 15px 25px;'>\n                        <div>\n                            <h5 class='mb-0 font-weight-bold'>{{client.name}}</h5>\n                        </div>\n                        <div class='ml-2 pl-2 border-left' style='flex: 1;'>\n                            <button mat-stroked-button class='animation pill-button mr-2' (click)='openClientFormDialog(client);'>\n                                <span><fa-icon icon='pen' [fixedWidth]='true' class='mr-2'></fa-icon>Edit name</span>\n                            </button>\n                        </div>\n                        <div class='ml-2 pl-2 border-left'>\n                            <button mat-stroked-button class='animation pill-button' (click)='showClientsApiData(client.uuid);'>\n                                <span *ngIf='client.uuid !== showApiClient.uuid'><fa-icon icon='eye' [fixedWidth]='true' class='mr-2' style='font-size: 15px;'></fa-icon>Show API info</span>\n                                <span *ngIf='client.uuid === showApiClient.uuid'><fa-icon icon='eye-slash' [fixedWidth]='true' class='mr-2' style='font-size: 15px;'></fa-icon>Hide API info</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div *ngIf='client.uuid === showApiClient.uuid' class='border-top'>\n                        <div *ngIf='showApiClient.api_token; else tokenLoading' style='padding: 25px;'>\n                            <div class='mb-3 d-flex align-items-center'>\n                                <div>\n                                    <h6 class='font-weight-bold mb-0' style='color: #1f2931;'>API Json</h6>\n                                </div>\n                                <div class='ml-2 pl-2 border-left'>\n                                    <button mat-stroked-button class='animation pill-button' (click)='updateClientToken(client.uuid);'>\n                                        <span><fa-icon icon='sync' [fixedWidth]='true' class='mr-2'></fa-icon>Regenerate token</span>\n                                    </button>\n                                </div>\n                            </div>\n<pre class='mb-0'>\n{{ '{' }}\n    'uuid': {{showApiClient.uuid}},\n    'api_token': {{showApiClient.api_token}}\n{{ '}' }}\n</pre>\n                        </div>\n                        <ng-template #tokenLoading>\n                            <div class='spinner d-flex align-items-center justify-content-center' style='padding: 25px;'>\n                                <mat-progress-spinner mode=\"indeterminate\" diameter='24' strokeWidth='4'></mat-progress-spinner>\n                            </div>\n                        </ng-template>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #isLoading>\n        <div class='spinner d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <mat-progress-spinner mode=\"indeterminate\" diameter='30' strokeWidth='4'></mat-progress-spinner>\n        </div>\n    </ng-template>\n    <ng-template #isEmpty>\n        <div class='w-100 d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <h5 class='font-weight-bold' style='color: grey;'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Clients list is empty</h5>\n        </div>\n    </ng-template>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from 'src/app/services/http.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n    selector: 'app-client-form-dialog',\n    templateUrl: './client-form-dialog.component.html',\n    styleUrls: ['./client-form-dialog.component.scss']\n})\nexport class ClientFormDialogComponent implements OnInit {\n    clientForm = {\n        uuid: null,\n        name: '',\n    };\n    savingForm = false;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public clientData: any,\n        private dialogRef: MatDialogRef<ClientFormDialogComponent>,\n        private https: HttpService,\n        private snackbarService: SnackbarService\n    ) {\n        if (clientData) {\n            this.clientForm = clientData;\n        }\n    }\n\n    ngOnInit(): void {\n    }\n\n    closeDialog(clientData): void {\n        this.dialogRef.close(clientData);\n    }\n\n    submitForm(): void {\n        this.savingForm = true;\n        this.snackbarService.openSnackBar(null, null, 'Saving form...');\n\n        const url = (this.clientData) ? 'web/updateClientName' : 'web/createClient';\n\n        this.https.post(url, {\n            uuid: this.clientForm.uuid,\n            name: this.clientForm.name.trim(),\n        }).toPromise().then(() => {\n            this.snackbarService.openSnackBar(true, 2500, 'Client saved.');\n            this.closeDialog(true);\n        }).catch(err => {\n            this.snackbarService.openSnackBar(false, 2500, 'Failed to save a form.');\n            console.log(err);\n        });\n    }\n\n}\n","<div class='dialog-container'>\n    <div class='dialog-header-wrapper d-flex align-items-center border-bottom'>\n        <div style='flex: 1;'>\n            <h5 *ngIf='clientData' class='font-weight-bold mb-0'>Edit client name</h5>\n            <h5 *ngIf='!clientData' class='font-weight-bold mb-0'>Add new client</h5>\n        </div>\n    </div>\n    <div class='dialog-secction-wrapper' style='padding-top: 30px;'>\n        <div class='w-100'>\n            <mat-form-field class='w-100' appearance=\"outline\">\n                <mat-label>Name of the client</mat-label>\n                <input [(ngModel)]=\"clientForm.name\" matInput placeholder=\"Client\" class='font-weight-bold' style='font-size: 18px;'>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class='dialog-footer'>\n        <button mat-stroked-button class='animation pill-button mr-1' (click)='closeDialog(null);' style='background: lightgray; border-color: transparent;'>\n            Cancel\n        </button>\n        <button mat-stroked-button\n        class='animation pill-button dark'\n        [disabled]='clientForm.name === \"\" || savingForm'\n        (click)='submitForm();'>\n            <span *ngIf='clientData'>Update</span>\n            <span *ngIf='!clientData'>Submit</span>\n        </button>\n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'filterByKey'\n})\nexport class FilterByKeyPipe implements PipeTransform {\n    transform(items: any[], searchText?: string, searchProperty?: string): any[] {\n        if (!items || !searchText) { return items; }\n        searchText = searchText.toLowerCase();\n        return items.filter( item => {\n            if (searchProperty) {\n                if (item[searchProperty]) {\n                    return item[searchProperty].toLowerCase().includes(searchText);\n                }\n            } else {\n                return item.toLowerCase().includes(searchText);\n            }\n        });\n    }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-snackbar-message',\n    templateUrl: './snackbar-message.component.html',\n})\nexport class SnackbarMessageComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data) {}\n}\n","<div class=\"d-flex align-items-center\">\n    <div class='mr-2 pr-2'style='flex: 1;'>\n        <h6 class=\"mb-0\" style='color: white; font-size: 14px;'>{{data.message}}</h6>\n    </div>\n    <div class=\"align-right\">\n        <span *ngIf='data.processed == null'>\n            <fa-icon icon='spinner'\n            [fixedWidth]=\"true\"\n            [pulse]=\"true\"\n            style=\"font-size: 14px;\"></fa-icon>\n        </span>\n        <span *ngIf=\"data.processed == false\">\n            <fa-icon icon='exclamation-triangle'\n            style=\"font-size: 14px; color: #ffad45;\"></fa-icon>\n        </span>\n        <span *ngIf=\"data.processed\">\n            <fa-icon icon='check-circle'\n            style=\"font-size: 14px; color: #38ff65;\"></fa-icon>\n        </span>\n    </div>   \n</div>","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// COMPONENTS\nimport { OverviewComponent } from './components/overview/overview.component';\nimport { CitiesComponent } from './components/cities/cities.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SnackbarMessageComponent } from './components/snackbar/snackbar-message.component';\n\n// DIALOGS\nimport { CityFormDialogComponent } from './components/cities/city-form/dialog-city-form.component';\nimport { DeleteCityDialogComponent } from './components/cities/delete-city/dialog-delete-city.component';\n\n// FONT AWESOME\nimport {FontAwesomeIconsModule} from './modules/font-awesome-icons.module';\n\n// MATERIAL MODULE\nimport { MaterialModule } from './modules/material.module';\n\n// PIPES\nimport { FilterByKeyPipe } from './pipes/filter.pipe';\n\n// SERVICES\nimport { HttpService } from './services/http.service';\nimport { SnackbarService } from './services/snackbar.service';\nimport { ClientFormDialogComponent } from './components/clients/client-form/client-form-dialog.component';\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        OverviewComponent,\n        FilterByKeyPipe,\n        CitiesComponent,\n        CityFormDialogComponent,\n        DeleteCityDialogComponent,\n        SnackbarMessageComponent,\n        ClientsComponent,\n        ClientFormDialogComponent\n    ],\n    imports: [\n        BrowserModule,\n        CommonModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MaterialModule,\n        FontAwesomeIconsModule,\n        HttpClientModule\n    ],\n    providers: [\n        HttpService,\n        SnackbarService\n    ],\n    entryComponents: [\n        SnackbarMessageComponent,\n        CityFormDialogComponent,\n        DeleteCityDialogComponent,\n        ClientFormDialogComponent\n    ],\n    schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { HttpService } from '../../../services/http.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n    selector: 'app-dialog-city-form',\n    templateUrl: './dialog-city-form.component.html',\n    styleUrls: ['./dialog-city-form.component.scss']\n})\nexport class CityFormDialogComponent {\n    savingForm = false;\n\n    cityForm = {\n        id: null,\n        name: '',\n        zip_codes: [],\n        capacity_schedule: []\n    };\n\n    weekArray = [\n        'Mo',\n        'Tu',\n        'We',\n        'Th',\n        'Fr',\n        'Sa',\n        'Su'\n    ];\n\n    showNewCodesInput = false;\n    newCodesInput = '';\n\n    showScheduleForm = false;\n    scheduleRowForm = {\n        time_from: '00:00',\n        time_to: '00:00',\n        capacity: Number,\n        time_id: Number,\n        availability_trough_week: [\n            {\n                day: 'monday',\n                day_number: 1,\n                available: false\n            },\n            {\n                day: 'tuesday',\n                day_number: 2,\n                available: false\n            },\n            {\n                day: 'wednesday',\n                day_number: 3,\n                available: false\n            },\n            {\n                day: 'thursday',\n                day_number: 4,\n                available: false\n            },\n            {\n                day: 'friday',\n                day_number: 5,\n                available: false\n            },\n            {\n                day: 'saturday',\n                day_number: 6,\n                available: false\n            },\n            {\n                day: 'sunday',\n                day_number: 7,\n                available: false\n            }\n        ]\n    };\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public cityData: any,\n        private dialogRef: MatDialogRef<CityFormDialogComponent>,\n        private https: HttpService,\n        private snackbarService: SnackbarService\n    ) {\n        if (cityData) {\n            this.cityForm = cityData;\n        }\n    }\n\n    closeDialog(cityData): void {\n        this.dialogRef.close(cityData);\n    }\n\n    addNewCodes(save): void {\n        if (save) {\n            this.newCodesInput = this.newCodesInput.replace(/\\s/g, '');\n            const codeArray = this.newCodesInput.split(',');\n            if (codeArray.length > 0) {\n                for (const code of codeArray) {\n                    if (code.trim() !== '') {\n                        if (this.cityForm.zip_codes.indexOf(code) === -1) {\n                            this.cityForm.zip_codes.push(code);\n                        }\n                    }\n                }\n            }\n            this.showNewCodesInput = false;\n        }\n        this.showNewCodesInput = false;\n        this.newCodesInput = '';\n    }\n\n    removeZipCode(listIndex): void {\n        this.cityForm.zip_codes.splice(listIndex, 1);\n    }\n\n    addNewTimeRow(): void {\n        this.cityForm.capacity_schedule.push(JSON.parse(JSON.stringify(this.scheduleRowForm)));\n    }\n\n    removeTimeRow(listIndex): void {\n        this.cityForm.capacity_schedule.splice(listIndex, 1);\n    }\n\n    submitForm(): void {\n        this.snackbarService.openSnackBar(null, null, 'Saving form...');\n        this.savingForm = true;\n\n        for (let schedule of this.cityForm.capacity_schedule) {\n            const time_from = schedule.time_from.replaceAll(\":\", \"\");\n            const time_to = schedule.time_to.replaceAll(\":\", \"\");\n            schedule.time_id = time_from.concat(time_to);\n        }\n\n        this.https.post('web/updateOrCreateCity', {\n            id: this.cityForm.id,\n            city_name: this.cityForm.name,\n            zip_codes: JSON.stringify(this.cityForm.zip_codes),\n            time_capacity: JSON.stringify(this.cityForm.capacity_schedule)\n        }).toPromise().then((data) => {\n            console.log(data);\n            this.savingForm = false;\n            this.snackbarService.openSnackBar(true, 2500, 'Form saved.');\n            // this.closeDialog(true);\n        }).catch(err => {\n            this.snackbarService.openSnackBar(false, 2500, 'Failed to save a form.');\n            console.log(err);\n        });\n    }\n}\n","<div class='dialog-container'>\n    <div class='dialog-header-wrapper d-flex align-items-center border-bottom'>\n        <div style='flex: 1;'>\n            <h5 *ngIf='cityData' class='font-weight-bold mb-0'>Edit city</h5>\n            <h5 *ngIf='!cityData' class='font-weight-bold mb-0'>Add new city</h5>\n        </div>\n    </div>\n    <div class='dialog-secction-wrapper' style='padding-top: 30px;'>\n        <div class='w-100'>\n            <mat-form-field class='w-100' appearance=\"outline\">\n                <mat-label>Name of the city</mat-label>\n                <input [(ngModel)]=\"cityForm.name\" matInput placeholder=\"City\" class='font-weight-bold' style='font-size: 18px;'>\n            </mat-form-field>\n        </div>\n        <hr>\n        <div class='w-100'>\n            <div class='mb-3 d-flex align-items-center'>\n                <div class='pr-2 mr-2 border-right'>\n                    <h6 class='mb-0 font-weight-bold'>Supported zip codes</h6>\n                </div>\n                <button *ngIf='!showNewCodesInput' mat-stroked-button class='animation pill-button' (click)='showNewCodesInput = true;'>\n                    + Add codes\n                </button>\n                <div *ngIf='showNewCodesInput'>\n                    <button mat-stroked-button class='animation pill-button mr-1' (click)='addNewCodes(false);' style='background: lightgray; border-color: transparent;'>\n                        Cancel\n                    </button>\n                    <button mat-stroked-button class='animation pill-button dark' (click)='addNewCodes(true);'>\n                        + Add\n                    </button>\n                </div>\n            </div>\n            <div *ngIf='showNewCodesInput' class='d-flex mb-4'>\n                <mat-form-field class='w-100' appearance=\"outline\">\n                    <mat-label>Supported zip codes</mat-label>\n                    <input [(ngModel)]=\"newCodesInput\"\n                    matInput\n                    placeholder=\"Enter zip codes\"\n                    class='font-weight-bold' style='font-size: 18px;'\n                    (keydown.enter)=\"addNewCodes(true);\">\n                    <mat-hint class='font-weight-bold'><span class='mr-1' style='color: #e87700;'>Important:</span>To add multiple zip codes, please seperate each code with comma ( , ) symbol. E.g.<span class='ml-1' style='color: black;'>0026, 0037, 0159...</span></mat-hint>\n                </mat-form-field>\n            </div>\n            <div *ngIf='cityForm.zip_codes.length > 0; else indexIsEmpty;' class='d-flex flex-wrap'>\n                <div *ngFor='let code of cityForm.zip_codes; let zip_index = index' class='animation zip-code-pill'>\n                    <h6 class='mb-0 font-weight-bold' style='flex: 1;'>{{code}}</h6>\n                    <fa-icon icon='times-circle' (click)='removeZipCode(zip_index);' class='ml-2' style='margin-right: -5px; color: #ff5151;'></fa-icon>\n                </div>\n            </div>\n            <ng-template #indexIsEmpty>\n                <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                    <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Zip codes list is empty</h6>\n                </div>\n            </ng-template>\n        </div>\n        <hr>\n        <div class='w-100'>\n            <div class='mb-3 d-flex align-items-center'>\n                <div class='pr-2 mr-2 border-right'>\n                    <h6 class='mb-0 font-weight-bold'>Available capacity schedule</h6>\n                </div>\n                <button *ngIf='!showScheduleForm' mat-stroked-button class='animation pill-button' (click)='addNewTimeRow();'>\n                    + Add row\n                </button>\n            </div>\n            <div *ngIf='cityForm.capacity_schedule.length > 0; else scheduleIsEmpty;'>\n                <div class='d-flex align-items-center' style='height: 30px; border-bottom: 1px solid #6c757d;'>\n                    <div style='width: 200px;'class='mr-2 pr-2 border-right'>\n                        <h6 class='mb-0 column-header-label'>Available time frame</h6>\n                    </div>\n                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                        <h6 class='mb-0 column-header-label'>Capacity</h6>\n                    </div>\n                    <div class='d-flex' style='flex:3;'>\n                        <div *ngFor='let day of weekArray' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                            <h6 class='mb-0 column-header-label'>{{day}}</h6>\n                        </div>\n                    </div>\n                    <div style='width: 30px;'></div>\n                </div>\n                <div *ngFor='let time_row of cityForm.capacity_schedule; let i = index;' class='d-flex align-items-center' style='border-bottom: 1px solid #B2BBBC; height: 40px;'>\n                    <div style='width: 200px;' class='mr-2 pr-2 border-right d-flex align-items-center'>\n                        <input [(ngModel)]=\"time_row.time_from\"\n                        matInput\n                        type=\"time\"\n                        placeholder=\"00:00\"\n                        class='font-weight-bold' style='font-size: 18px;'>\n                        <h4 class='mr-2 ml-2 mb-0' style='font-size: 18px;'>/</h4>\n                        <input [(ngModel)]=\"time_row.time_to\"\n                        matInput\n                        type=\"time\"\n                        placeholder=\"00:00\"\n                        class='font-weight-bold' style='font-size: 18px;'>\n                    </div>\n                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                        <input [(ngModel)]=\"time_row.capacity\"\n                        matInput\n                        type=\"number\"\n                        placeholder=\"0\"\n                        class='font-weight-bold' style='font-size: 18px;'>\n                    </div>\n                    <div class='d-flex' style='flex:3;'>\n                        <div *ngFor='let day of time_row.availability_trough_week' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                            <mat-checkbox class=\"example-margin\"\n                            [(ngModel)]=\"day.available\"\n                            [checked]=\"day.available\">\n                            </mat-checkbox>\n                        </div>\n                    </div>\n                    <div style='width: 30px;'>\n                        <div class='d-flex align-items-center justify-content-center'\n                        style='width: 30px; height: 30px; cursor: pointer; margin-left: -4px;'\n                        (click)='removeTimeRow(i);'>\n                            <fa-icon icon='times-circle' style='font-size: 16px; color: #ff5151;'></fa-icon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ng-template #scheduleIsEmpty>\n                <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                    <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Capacity schedule list is empty</h6>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n    <div class='dialog-footer'>\n        <button mat-stroked-button class='animation pill-button mr-1' (click)='closeDialog(null);' style='background: lightgray; border-color: transparent;'>\n            Cancel\n        </button>\n        <button mat-stroked-button\n        class='animation pill-button dark'\n        (click)='submitForm();'\n        [disabled]='cityForm.capacity_schedule.length === 0 || cityForm.zip_codes.length === 0 || cityForm.name === \"\" || savingForm'>\n            <span *ngIf='cityData'>Update</span>\n            <span *ngIf='!cityData'>Submit</span>\n        </button>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpService } from './../../services/http.service';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CityFormDialogComponent } from './city-form/dialog-city-form.component';\nimport { DeleteCityDialogComponent } from './delete-city/dialog-delete-city.component';\n\n@Component({\n    selector: 'app-cities',\n    templateUrl: './cities.component.html',\n    styleUrls: ['./cities.component.scss']\n})\nexport class CitiesComponent implements OnInit {\n    cities = [];\n    gettingCities = true;\n\n    weekArray = [\n        'Mo',\n        'Tu',\n        'We',\n        'Th',\n        'Fr',\n        'Sa',\n        'Su'\n    ];\n\n    constructor(\n        private dialog: MatDialog,\n        private https: HttpService\n    ) { }\n\n    ngOnInit(): void {\n        this.getCities();\n    }\n\n    getCities(): void {\n        this.gettingCities = true;\n        this.https.get('web/getCities', {}).subscribe((cities: []) => {\n            if (cities) {\n                this.cities = cities;\n                this.gettingCities = false;\n            }\n        });\n    }\n\n    openCityFormDialog(cityData): void {\n        const dialogRef = this.dialog.open(CityFormDialogComponent, {\n            data: JSON.parse(JSON.stringify(cityData)),\n            autoFocus: false,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            if (data) {\n                this.getCities();\n            }\n        });\n    }\n\n    openDeleteCityDialog(cityData): void {\n        const dialogRef = this.dialog.open(DeleteCityDialogComponent, {\n            data: JSON.parse(JSON.stringify(cityData)),\n            autoFocus: false,\n            disableClose: true\n        });\n        dialogRef.afterClosed().subscribe(data => {\n            if (data) {\n                this.getCities();\n            }\n        });\n    }\n\n}\n","<div>\n    <div class='d-flex align-items-center pl-4 pr-4 border-bottom position-relative view-header-wrapper' style='height: 70px;'>\n        <div>\n            <h4 class='mb-0 font-weight-bold'>Cities</h4>\n        </div>\n        <div class='pl-2 ml-2 border-left'>\n            <button mat-stroked-button class='animation pill-button' (click)='openCityFormDialog(null);'>\n                + Add city\n            </button>\n        </div>\n    </div>\n    <div *ngIf='!gettingCities; else isLoading'>\n        <div *ngIf='cities.length > 0; else isEmpty;'>\n            <input placeholder=\"Search city...\" autocomplete=\"off\" class='animation border-bottom search-cities-wrapper' [(ngModel)]=\"citySearchInput\">\n            <div class='list-cities'>\n                <div *ngFor='let city of cities | filterByKey : citySearchInput : \"name\"' class='city-container shadow-sm'>\n                    <div class='city-container-header border-bottom'>\n                        <div class='d-flex align-items-center' style='flex: 1;'>\n                            <h5 class='mb-0 font-weight-bold'>{{city.name}}</h5>\n                            <div class='pl-2 ml-2 border-left d-flex'>\n                                <button mat-stroked-button class='animation pill-button' (click)='openCityFormDialog(city);'>\n                                    <fa-icon icon='pen' [fixedWidth]='true' class='mr-2'></fa-icon>Edit\n                                </button>\n                                <button mat-stroked-button class='animation pill-button danger ml-2' (click)='openDeleteCityDialog(city);'>\n                                    <fa-icon icon='trash' [fixedWidth]='true' class='mr-2'></fa-icon>Delete\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <div class='city-container-body'>\n                        <div>\n                            <h6 class=\"mb-3 font-weight-bold section-title\">Supported zip codes</h6>\n                            <div>\n                                <div *ngIf='city.zip_codes.length > 0; else indexIsEmpty;' class='d-flex flex-wrap'>\n                                    <div *ngFor='let code of city.zip_codes' class='animation zip-code-pill'>\n                                        <h6 class='mb-0 font-weight-bold' style='flex: 1;'>{{code}}</h6>\n                                    </div>\n                                </div>\n                                <ng-template #indexIsEmpty>\n                                    <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                                        <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Zip codes list is empty</h6>\n                                    </div>\n                                </ng-template>\n                            </div>\n                        </div>\n                        <hr>\n                        <div class='w-100'>\n                            <h6 class=\"mb-3 font-weight-bold section-title\">Available capacity schedule</h6>\n                            <div *ngIf='city.capacity_schedule.length > 0; else scheduleIsEmpty;'>\n                                <div class='d-flex align-items-center' style='height: 30px; border-bottom: 1px solid #6c757d;'>\n                                    <div style='width: 200px;'class='mr-2 pr-2 border-right ellipsis'>\n                                        <h6 class='mb-0 column-header-label ellipsis' style='font-size: 14px; font-weight: 400;'>Available time frame</h6>\n                                    </div>\n                                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                                        <h6 class='mb-0 column-header-label' style='font-size: 14px; font-weight: 400;'>Capacity</h6>\n                                    </div>\n                                    <div class='d-flex' style='flex:3;'>\n                                        <div *ngFor='let day of weekArray' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                                            <h6 class='mb-0 column-header-label' style='font-size: 14px; font-weight: 400;'>{{day}}</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div *ngFor='let time_row of city.capacity_schedule' class='d-flex align-items-center' style='border-bottom: 1px solid #B2BBBC; height: 40px;'>\n                                    <div style='width: 200px;' class='mr-2 pr-2 border-right d-flex align-items-center'>\n                                        <h6 class='font-weight-bold mb-0'>{{time_row.time_from}}</h6>\n                                        <h6 class='mr-2 ml-2 mb-0'>/</h6>\n                                        <h6 class='font-weight-bold mb-0'>{{time_row.time_to}}</h6>\n                                    </div>\n                                    <div style='flex:1;' class='mr-2 pr-2 border-right'>\n                                        <h6 class='font-weight-bold mb-0'>{{time_row.capacity}}</h6>\n                                    </div>\n                                    <div class='d-flex' style='flex:3;'>\n                                        <div *ngFor='let day of time_row.availability_trough_week' style='flex: 1;' class='mr-2 pr-2 border-right'>\n                                            <mat-checkbox class=\"example-margin\"\n                                            [checked]=\"day.available\"\n                                            [disabled]='true'>\n                                            </mat-checkbox>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <ng-template #scheduleIsEmpty>\n                                <div class='d-flex align-items-center justify-content-center' style='background: #d9edff; padding: 15px; border-radius: 5px;'>\n                                    <h6 class='mb-0 font-weight-bold' style='color: #265b94'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Capacity schedule list is empty</h6>\n                                </div>\n                            </ng-template>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <ng-template #isLoading>\n        <div class='spinner d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <mat-progress-spinner mode=\"indeterminate\" diameter='30' strokeWidth='4'></mat-progress-spinner>\n        </div>\n    </ng-template>\n    <ng-template #isEmpty>\n        <div class='w-100 d-flex align-items-center justify-content-center' style='height: calc(100vh - 70px);'>\n            <h5 class='font-weight-bold' style='color: grey;'><fa-icon icon='folder-open' class='mr-2'></fa-icon>Cities list is empty</h5>\n        </div>\n    </ng-template>\n</div>\n","import {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatProgressSpinnerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatSnackBarModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatSidenavModule,\n        MatProgressSpinnerModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatCheckboxModule,\n        MatSnackBarModule\n    ]\n})\nexport class MaterialModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {catchError} from 'rxjs/operators';\nimport {throwError} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HttpService {\n    constructor(\n        private https: HttpClient\n    ) { }\n\n    // tslint:disable-next-line:typedef\n    get(url, params) {\n        return this.https.get(url, {\n            params\n        }).pipe(catchError((err: HttpErrorResponse) => {\n            if (err.status === 401 || err.status === 440) {\n                window.location.replace('/logout');\n                return throwError(err);\n            }  else if (!err.ok) {\n                return throwError(false);\n            }\n        }));\n    }\n\n    // tslint:disable-next-line:typedef\n    post(url, params) {\n        return this.https.post(url, params).pipe(\n            catchError((err: HttpErrorResponse) => {\n                if (err.status === 401 || err.status === 440) {\n                    window.location.replace('/logout');\n                    return throwError(err);\n                } else if (err.status === 422) {\n                    return throwError(err.error.errors);\n                }  else if (!err.ok) {\n                    return throwError(false);\n                }\n            })\n        );\n    }\n}\n","import { NgModule } from '@angular/core';\n\n// FONT AWESOME\nimport { FontAwesomeModule, FaIconLibrary, FaConfig } from '@fortawesome/angular-fontawesome';\nimport {} from '@fortawesome/free-regular-svg-icons';\nimport {\n    faCity, faFolder, faFolderOpen, faHome, faPlus, faSave, faSignOutAlt,\n    faTimes, faTimesCircle, faUserCircle, faSpinner, faExclamationTriangle, faCheckCircle, faSearch,\n    faEdit, faPen, faTrash, faEnvelope, faUsers, faEye, faEyeSlash, faSync,\n} from '@fortawesome/free-solid-svg-icons';\n\n@NgModule({\n    imports: [ FontAwesomeModule ],\n    exports: [ FontAwesomeModule ]\n})\n\nexport class FontAwesomeIconsModule {\n    constructor(\n        faConfig: FaConfig,\n        library: FaIconLibrary\n    ) {\n        faConfig.fixedWidth = true;\n        library.addIcons(\n            faHome, faCity, faUserCircle, faSignOutAlt, faPlus, faFolder, faFolderOpen,\n            faTimes, faTimesCircle, faSave, faSpinner, faExclamationTriangle, faCheckCircle, faSearch,\n            faEdit, faPen, faTrash, faEnvelope, faUsers, faEye, faEyeSlash, faSync\n        );\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SnackbarMessageComponent } from '../components/snackbar/snackbar-message.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SnackbarService {\n    constructor(private snackbar: MatSnackBar) {}\n\n    openSnackBar(processed, duration, message): void {\n        this.snackbar.openFromComponent(SnackbarMessageComponent, {\n            duration,\n            data: {processed, message}\n        });\n    }\n    dismissSnackBar(): void {\n        this.snackbar.dismiss();\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nimport { OverviewComponent } from './components/overview/overview.component';\nimport { CitiesComponent } from './components/cities/cities.component';\nimport { ClientsComponent } from './components/clients/clients.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'overview',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        redirectTo: 'overview',\n        pathMatch: 'full'\n    },\n    {\n        path: 'overview',\n        component: OverviewComponent\n    },\n    {\n        path: 'cities',\n        component: CitiesComponent\n    },\n    {\n        path: 'clients',\n        component: ClientsComponent\n    },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {\n            onSameUrlNavigation: 'reload',\n            preloadingStrategy: PreloadAllModules\n        })\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}